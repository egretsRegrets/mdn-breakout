{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/main.js"],"names":[],"mappingsfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const CANVAS = document.getElementById('myCanvas');\nconst ctx = CANVAS.getContext('2d');\n\nvar x = CANVAS.width / 2;\nvar y = CANVAS.height - 30;\nvar dx = .75; // x offset at each new frame\nvar dy = -.75; // y offset at each new frame\nvar rightPressed = false;\nvar leftPressed = false;\nvar isPaused = false;\nvar score = 0;\n\nvar brick = {\n    rowCount: 4,\n    columnCount: 7,\n    padding: CANVAS.width * 0.01\n}\nbrick.paddingUnitNumber = brick.columnCount + 1;\nbrick.width = (CANVAS.width - (brick.paddingUnitNumber * brick.padding)) / brick.columnCount;\nbrick.height = CANVAS.height * 0.03;\n\nvar bricks = [];\nfor (c = 0; c < brick.columnCount; c++) {\n    bricks[c] = [];\n    for (r = 0; r < brick.rowCount; r++) {\n        bricks[c][r] = {x: 0, y: 0, status: 1};\n    }\n}\n\nfunction drawBricks(){\n    for (c = 0; c < brick.columnCount; c++) {\n        for (r = 0; r < brick.rowCount; r++){\n            if (bricks[c][r].status === 1) {\n                let brickX = ((c + 1) * brick.padding) + (brick.width * (c));\n                let brickY = ((r + 1) * brick.padding) + (brick.height * (r));\n                bricks[c][r].x = brickX;\n                bricks[c][r].y = brickY;\n                ctx.beginPath();\n                ctx.rect(brickX, brickY, brick.width, brick.height);\n                ctx.fillStyle = '#2D7DBC';\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n}\n\nfunction brickCollision() {\n    for (c = 0; c < brick.columnCount; c++){\n        for (r = 0; r < brick.rowCount; r++){\n            let thisBrick = bricks[c][r];\n            if (thisBrick.status === 1){\n                let ballPositionY = getBallPositionY();\n                let ballPositionX = getBallPositionX();\n                if ( ballPositionY < thisBrick.y + brick.height && ballPositionY > thisBrick.y ){\n                    if( ballPositionX < thisBrick.x + brick.width && ballPositionX > thisBrick.x){\n                        dy = -dy;\n                        thisBrick.status = 0;\n                        score += 1;\n                        if (score === brick.columnCount * brick.rowCount){\n                            isPaused = true;\n                            alert(\"win!\");\n                            document.location.reload();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nvar ball = {\n    radius: 4,\n    color: '#7ACFD6'\n}\nball.draw = function (){\n    ctx.beginPath();\n    ctx.arc(x, y, ball.radius, 0, Math.PI * 2);\n    ctx.fillStyle = ball.color;\n    ctx.fill();\n    ctx.closePath();\n    if ( x + dx < ball.radius || x + dx > CANVAS.width - ball.radius){ // hits left limit of canvas, hit right limit of canvas\n        dx = -dx;\n    }\n    if ( y + dy < ball.radius){ // hits canvas ceiling\n        dy = -dy;\n    }\n    // hits paddle\n    if ( x + dx - ball.radius > paddle.xPos && x + dx + ball.radius < paddle.xPos + paddle.width ) { \n        if (y + dy + ball.radius >= CANVAS.height - paddle.height && y + dy < CANVAS.height) {\n            dy = -dy;\n            if (dy > -3){ // speed up ball up to 3px diff per frame\n                dy -= 0.05;\n                if(dx > 0){\n                    dx += 0.05;\n                }else if (dx < 0){\n                    dx -= 0.05;\n                }\n            }\n        }\n    }\n    // hits canvas floor\n    if (y + dy > CANVAS.height){\n        isPaused = true;\n        alert(\"GAME OVER\");\n        document.location.reload();\n    }\n}\n\nvar paddle = {\n    height: 10,\n    width: 75,\n    color: '#2D7DBC'\n};\npaddle.xPos = (CANVAS.width - paddle.width) / 2;\npaddle.draw = function(){\n    ctx.beginPath;\n    ctx.rect(paddle.xPos, CANVAS.height - paddle.height, paddle.width, paddle.height);\n    ctx.fillStyle = paddle.color;\n    ctx.fill();\n    ctx.closePath();\n    if(rightPressed && paddle.xPos < CANVAS.width - paddle.width){\n        paddle.xPos += 7;\n    }else if(leftPressed && paddle.xPos > 0){\n        paddle.xPos -= 7;\n    }\n}\n\nfunction draw() {\n    if (isPaused === false){\n        ctx.clearRect(0, 0, CANVAS.width, CANVAS.height); // clear the entire canvas before drawing\n        drawBricks();        \n        paddle.draw();\n        ball.draw();\n        brickCollision();\n        drawScore();\n\n        x += dx;\n        y += dy;\n    }\n}\n\ndocument.addEventListener('keydown', keyDownHandler, false);\ndocument.addEventListener('keyup', keyUpHandler, false);\ndocument.getElementsByClassName('mouse-toggle')[0].addEventListener('click', enableMouseControl, false);\n\nfunction drawScore(){\n    ctx.font = '12px Arial';\n    ctx.fillStyle = '#F45B69';\n    ctx.fillText(`Score: ${score}`, 8, CANVAS.height - 40);\n}\n\nfunction getBallPositionY() {\n    let ballPositionY;\n    if (dy < 0){\n        ballPositionY = y + dy - ball.radius;\n    } else if (dy > 0){\n        ballPositionY = y + dy + ball.radius;\n    }\n    return ballPositionY;\n}\n\nfunction getBallPositionX() {\n    let ballPositionX;\n    if (dx < 0){\n        ballPositionX = x + dx - ball.radius;\n    } else if (dx > 0){\n        ballPositionX = x + dx + ball.radius;\n    }\n    return ballPositionX;\n}\n\nfunction keyDownHandler(event) {\n    if (event.keyCode === 37 || event.keyCode === 65){\n        leftPressed = true;\n    }\n    else if (event.keyCode === 39 || event.keyCode === 68){\n        rightPressed = true;\n    }\n    else if (event.keyCode === 27){\n        if (isPaused === false){\n            isPaused = true;\n        }else {\n            isPaused = false;\n        }\n    }\n}\n\nfunction keyUpHandler(event) {\n    if (event.keyCode === 37 || event.keyCode === 65){\n        leftPressed = false;\n    }\n    else if (event.keyCode === 39 || event.keyCode === 68){\n        rightPressed = false;\n    }\n}\n\nfunction mouseMoveHandler (event) {\n    let relativeX = event.clientX - CANVAS.offsetLeft;\n    if (relativeX - paddle.width / 2 > 0 && relativeX + paddle.width / 2 < CANVAS.width){\n        paddle.xPos = relativeX - paddle.width / 2;\n    }\n}\n\nfunction enableMouseControl (){\n    let btn = document.getElementsByClassName('mouse-toggle')[0];\n    let btnClasses = btn.classList;\n    console.log(btnClasses);\n    if(!btnClasses.contains('on')){\n        btnClasses.add('on');\n        document.addEventListener('mousemove', mouseMoveHandler, false);\n    }else{\n        btnClasses.remove('on');\n        document.removeEventListener('mousemove', mouseMoveHandler, false);\n    }\n}\n\nsetInterval(draw, 10);\n\n // draw every 10miliseconds"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}